<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- 메뉴페이지 샘플데이터 사진때문에 hoje개인랩탑 경로 임의로 적어놨습니다! -->
	<resources mapping="/image/menu/**" location="file:///C:/Users/Hoje/Desktop/hoje/파이널-커피의민족/스타벅스/메뉴DB/" />	
	
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">

		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="kr.kh.finalproject.*" />


	<!-- 타일즈 설정. 타일즈뷰리졸버 등록 -->
	<beans:bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" /><!-- 순서를 우선으로 지정 -->
	</beans:bean>
	
	<!-- 타일즈 설정 파일을 등록 -->
	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/spring/tiles-def.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	
	<!-- 인터셉터 추가될 때마다, beans랑 매핑할 url 추가 -->
	<beans:bean id="loginInterceptor" class="kr.kh.finalproject.interceptor.LoginInterceptor" />
	<beans:bean id="autoLoginInterceptor" class="kr.kh.finalproject.interceptor.AutoLoginInterceptor"></beans:bean>
	<beans:bean id="adminInterceptor" class="kr.kh.finalproject.interceptor.AdminInterceptor"></beans:bean>
	
	<interceptors>
		<interceptor>
			<!-- 매핑할 url -->
			<mapping path="/member/login" />
			<mapping path="/member/login2" />
			<beans:ref bean="loginInterceptor" />
		</interceptor>
		
		<interceptor>
			<mapping path="/admin/**"/>
			<beans:ref bean="adminInterceptor" />
		</interceptor>

	</interceptors>
	
	
	<!-- 첨부파일 업로드 파일 크기 설정 -->
	<beans:bean id="multipartResolver" 
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 업로드 최대 크기 10Mb -->
		<beans:property name="maxUploadSize" value="10485760"></beans:property>
	</beans:bean>
	
	<!-- 업로드 -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="D://uploadfiles"/>
		<!-- <beans:constructor-arg value="D://uploadfiles"/> -->
	</beans:bean>
	<beans:bean id="uploadImgPath" class="java.lang.String">
		<beans:constructor-arg value="D://img"/>
	</beans:bean>
	
</beans:beans> 
