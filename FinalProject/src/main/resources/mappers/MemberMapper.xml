<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="src/main/resources/mappers/MemberMapper.xml">
	<select id="authenticateUser" resultType="kr.kh.finalproject.vo.MemberVO">
		SELECT COUNT(*) FROM member
		WHERE me_oi_id = #{username} AND me_pw = #{password}
	</select>
	<!-- SELECT 문: 사용자 인증을 위한 정보 조회 -->
    <select id="getMemberForAuthentication" resultType="kr.kh.finalproject.vo.MemberVO">
        SELECT me_oi_id, me_pw, me_name, me_authority
        FROM member
        WHERE me_oi_id = #{me_oi_id}
    </select>
	<!-- SELECT 문: 사용자 ID로 멤버 조회 -->
    <select id="getMemberById" resultType="kr.kh.finalproject.vo.MemberVO">
        SELECT * FROM member WHERE me_oi_id = #{me_oi_id}
    </select>

    <!-- INSERT 문: 새로운 멤버 추가 -->
    <insert id="insertMember" parameterType="kr.kh.finalproject.vo.MemberVO">
        INSERT INTO member (me_oi_id, me_pw, me_name, me_email, me_deposit, me_point, me_authority, me_ip)
        VALUES (#{me_oi_id}, #{me_pw}, #{me_name}, #{me_email}, #{me_deposit}, #{me_point}, #{me_authority}, #{me_ip})
    </insert>

    <!-- UPDATE 문: 멤버 정보 업데이트 -->
    <update id="updateMember" parameterType="kr.kh.finalproject.vo.MemberVO">
        UPDATE member
        SET me_pw = #{me_pw}, me_name = #{me_name}, me_email = #{me_email}, me_deposit = #{me_deposit},
            me_point = #{me_point}, me_authority = #{me_authority}, me_ip = #{me_ip}
        WHERE me_oi_id = #{me_oi_id}
    </update>

    <!-- DELETE 문: 멤버 삭제 -->
    <delete id="deleteMember" parameterType="java.lang.String">
        DELETE FROM member WHERE me_oi_id = #{me_oi_id}
    </delete>
</mapper>